---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: http-server
  name: http-server
  namespace: demo
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: http-server
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
data:
  appconfig.yaml: |
    app:
      host: 0.0.0.0
      port: 8080

    log:
      level: debug
      path: /var/log/http-server
      file_name: log.log
      max_age: 259200         #日志保存时间，默认存放30天，以秒为单位
      rotation_time: 86400
metadata:
  labels:
    app: http-server
  name: http-server-config
  namespace: demo

---
apiVersion: v1
kind: Secret
metadata:
  name: demo-tls
  namespace: default
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZ6ekNDQTdlZ0F3SUJBZ0lKQUtUVmdNQTZlMzFPTUEwR0NTcUdTSWIzRFFFQkRRVUFNSDR4Q3pBSkJnTlYKQkFZVEFrTk9NUkl3RUFZRFZRUUlEQWxIZFdGdVoyUnZibWN4RVRBUEJnTlZCQWNNQ0ZOb1pXNTZhR1Z1TVJRdwpFZ1lEVlFRS0RBdDJkblpwYm1ObGJuUnNhVEVSTUE4R0ExVUVDd3dJVUdWeWMyOXVZV3d4SHpBZEJnTlZCQU1NCkZuTmxjblpsY2k1MmRuWnBibU5sYm5Sc2FTNWpiMjB3SGhjTk1qRXhNakE0TURFeU16VTRXaGNOTXpFeE1qQTIKTURFeU16VTRXakIrTVFzd0NRWURWUVFHRXdKRFRqRVNNQkFHQTFVRUNBd0pSM1ZoYm1ka2IyNW5NUkV3RHdZRApWUVFIREFoVGFHVnVlbWhsYmpFVU1CSUdBMVVFQ2d3TGRuWjJhVzVqWlc1MGJHa3hFVEFQQmdOVkJBc01DRkJsCmNuTnZibUZzTVI4d0hRWURWUVFEREJaelpYSjJaWEl1ZG5aMmFXNWpaVzUwYkdrdVkyOXRNSUlDSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUFzSXBaM2dKSTRKQ0h1QXVxUHcrbHQvOVBaYllhRkdYeApMeUtjbXlDK0tnT3dBMlUxam4raDFlcnEzQ004QS9xZjJQZnc2RzJjUHQ1Y09aMlJUaTd3ays4RnNJRWt0elRwCmIyYW9BOWRDeGFlZjNWcGtLS3hjUWJJNWRSOGtvRHJadWRHb1FmOFhkRDlZSisvV3NFelhVY0MrbHVkVlhCQjQKbjNzaTFvRWhFb0QwSlBKRnlNbUprVUlncVdScDZvekpUOUVPUmVCVW8xclJGQk5oeXJVdjJwTndzbGl1cjhrNgo2MWhIR1VLTUhhNUw1UXphVndaVTA0NHdsLzBRbXFNQm96Q3BuaGg0dGNQejUxSnRneElUMHNleEdUYlpKR0NKCnBuVHlUd3ZJbUlZVVN0Y1FFbm96NEJXWStRTzFlcW9NbUQvVzU4eDdlclNXaTZVdVBFWkFUeGdrY0pmbGV0ZE4Kdm9sR2JLanFheVp0YXhScUVhVU50NFIwZXIrcHhuVzZaQkY1MkR6elJuQm82UXdIWENCTHFvRy9QRlZtQnFKWgpKN3JQbzZMcWhjOXlXK0F6bURiblQzV0hsWm9GZTdYRTZyU2UxWlBWcnBUSkRJU2hTODZYT1pTcUd3cEpTVUVnCnBBdm1LTURMOTUzNU5FeTFoUndURUxwOGdyZWNVRDBDeXQ5Ni9LRm04dStzQU8wdFdRbmtyVkJaSWRXL2FBUDcKclAvRXBEQXlHNWZKWWlkZk9GUXNOT3EvVXJsaXJvazJZRWM0ZGF3M1lsYTFPcDY1Uk1VN3F4TWlQZnFXUGhKZwpwVHlCMmFXa2gzT21Ha0ZpeFVudjM4Zlc1b2NsMXQxUlZRUW9pY2lqaUZTMXp2MERubjlMTmR4c09iYVVvUld3Ck9CNEVnQlJXMmcwQ0F3RUFBYU5RTUU0d0hRWURWUjBPQkJZRUZPSkJWWlN4RkFVQ3ZmaWQwV3lzMTVORTZXUW8KTUI4R0ExVWRJd1FZTUJhQUZPSkJWWlN4RkFVQ3ZmaWQwV3lzMTVORTZXUW9NQXdHQTFVZEV3UUZNQU1CQWY4dwpEUVlKS29aSWh2Y05BUUVOQlFBRGdnSUJBQW1zaUtFdHNscUNObkR1alNINXRSWWhYMXdmWjU5c1FZeTEyU1QyClFoSVVxQ3BBa1A1Q3BtRmV3N3lUd21vYXNVakd1YnVjcmd6Z2JFMURSVFFqejNoWmVMT0llQTE3c2RLR0J5NloKalU0dmhFcThLWk5ISFIycURid2ZYelp1V2FXckZmdUJjL0NUd05iaGI3MGlXSFNGVlBGMUJwMDAwMFdHN0ZsZwpLZTNGU2RudDJoU1NaSUVHc09WY3NuTVZ1c0tJd04zS1FRMGJpandrKzk3YnM4Wk5MMGZFZXd6anJOb0ZaYWh3CkxFVXRmK0NYY3Npai9ncVNhazF3U1VpcWEzN2Z0aHFtT2FkclpZVWFIZlZwTEI2ZHJhRGl5cGhGZVozVE92ODAKTnlaMnNvc1NtT240RWY1TmxFN201bldDMGFUM0lrTmozd0VnOWVjOEpqZlVqUUtMTG5QaWpxV0o3ajhBOUVUUApudVBXSy9vb3BZL29HdUt0cFNiUXdjZFdsd2VUTFhweWpxUmh4aWtncmhraE56Q3V1RStkaGFKS1ZEQWJicWtlCmttNHJxMW9pdjcvVzc1OGZxQk1UdnJzc0Z2WDFlRHIxcVRDNmdMUnlaaHppNm9tT1RnbDkvN1dUMDkrelVNRnQKQkVTbEN4dFN4THNmK2ZGcTZJSzBwVG1rRkNZWjhaVG9qYTRIK2kxYXVOaDVGb3hOcnNxQ0NjSnpUbytWMm5oOApSR0RWeWNoVWxJQ0hYcVArL2hjWHo4akZYUGRheG9JcXBFVDlYMlhhcFhQU2VXSk9rUlFDcVlnRldDWDVhRnRiCi8vbEhsN0tkL0NPdkdxSlZrYk12WFFQamxZb0V6azU2ajVXaTZiTW41ZndmMnM4U0ZKUDc1OHRadTdxWkpTakcKZFlVbwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKSndJQkFBS0NBZ0VBc0lwWjNnSkk0SkNIdUF1cVB3K2x0LzlQWmJZYUZHWHhMeUtjbXlDK0tnT3dBMlUxCmpuK2gxZXJxM0NNOEEvcWYyUGZ3NkcyY1B0NWNPWjJSVGk3d2srOEZzSUVrdHpUcGIyYW9BOWRDeGFlZjNWcGsKS0t4Y1FiSTVkUjhrb0RyWnVkR29RZjhYZEQ5WUorL1dzRXpYVWNDK2x1ZFZYQkI0bjNzaTFvRWhFb0QwSlBKRgp5TW1Ka1VJZ3FXUnA2b3pKVDlFT1JlQlVvMXJSRkJOaHlyVXYycE53c2xpdXI4azY2MWhIR1VLTUhhNUw1UXphClZ3WlUwNDR3bC8wUW1xTUJvekNwbmhoNHRjUHo1MUp0Z3hJVDBzZXhHVGJaSkdDSnBuVHlUd3ZJbUlZVVN0Y1EKRW5vejRCV1krUU8xZXFvTW1EL1c1OHg3ZXJTV2k2VXVQRVpBVHhna2NKZmxldGROdm9sR2JLanFheVp0YXhScQpFYVVOdDRSMGVyK3B4blc2WkJGNTJEenpSbkJvNlF3SFhDQkxxb0cvUEZWbUJxSlpKN3JQbzZMcWhjOXlXK0F6Cm1EYm5UM1dIbFpvRmU3WEU2clNlMVpQVnJwVEpESVNoUzg2WE9aU3FHd3BKU1VFZ3BBdm1LTURMOTUzNU5FeTEKaFJ3VEVMcDhncmVjVUQwQ3l0OTYvS0ZtOHUrc0FPMHRXUW5rclZCWklkVy9hQVA3clAvRXBEQXlHNWZKWWlkZgpPRlFzTk9xL1VybGlyb2syWUVjNGRhdzNZbGExT3A2NVJNVTdxeE1pUGZxV1BoSmdwVHlCMmFXa2gzT21Ha0ZpCnhVbnYzOGZXNW9jbDF0MVJWUVFvaWNpamlGUzF6djBEbm45TE5keHNPYmFVb1JXd09CNEVnQlJXMmcwQ0F3RUEKQVFLQ0FnQVVlN2o1bldJL1RBV3pRUWM3MGVEMGZGY0dBaDc4aHVkNUJKY1BHTGwzdm4zSnB4Q1R2Qk5XOHE3VgpZL0V1dFFHZTl3V29zaThTekZIL0RWMHlxUmVZMG43aWY5bDJ1Rmp0YUFmT2lrZGhENVhvNVBnQ0VCMlVNYzJnCjNVQXVweVZqL2dON3hORS8xNm11MkpFY1c0NFFHa0VDMlV4NkpoOFl3ZnpFenE2N3F1S285c05LRExnOWRtSzcKeEw3VlRBaC9qazROcFgyc2hua0R6MHZsYlNoa1AvOHZja0t5ZXJLdlk4cThENUNhVVFMVlRLeDR0RzliTElCTwo0am51OTBMVllHd052K0VobGQ3UzFDbUlyNnhGSkk1VDBwMVhMeXhKZUFBMVU3U3VuYi8wL3djS1hjdHZFSkp6Ck1nNzRjSXFOajdxcm9ub2hQcHJKRVIxUU9RWjA5VzFnMGs5WEtNaE16cnZmc1h2bWlxZ1VZSVV2Q2Q5NXQ5dWcKenV4MjlIemNuZ25mZnIrUVMvQ1Q0dFRwbzRPeUw0ZjlVeXArMDdydDlHcGpmeHd2MVNqMEUxOXhLTkM1b0hxcQpEU09IcUVkMmx0ZmlVMVJpMis5ZjkvdFFrV1RpK0lBYWxJWnJQTjVpYWVxQmU1OHgzR1JEYVdVWWhBeHJlUnppCnRGY0ZjMU01VnJLRGdtVmhiSE5ic29aNnM0SmdGb2tmRWNXMXFRdVB0UlJjZlQzWmxjUzBNY2Fncitza0tZT0gKTVNqRzQzUDVVOTIyMm1DTXRDc1d1dGlYckMycEcrbGRHUC9LWUtMTlBPZ1M0S3c4MnVVemRZWUdMbklmVkhkMAo4czlzb2FjaWpKZjE2eWNpcXRvM0lJc0g5cDBHUFVqT21sU01NS0VwWUdhcjBBRmdBUUtDQVFFQTVLMGdwanVOCkFud0t0RXRSZnQzK3ZXZHhxZmV2RUJyem1ETnBKbGFqUkRwdnkvZlh3aGZhaWNQWDdCSlFuNElUYTNYM0pkYXQKU3RSU05sczdCMXk0eWNET05WeGxtd3pjV05IQ3B1NFhjQ0JRMnVpWk05bU9NV28zQVBHQVh0NHdiVUpiNS9YdQp6U09JL3ZLM3hYMHZSWjZrcTRmZTBHYXRwa2txOGJsWURBZmxMMVRyaThRZFBVc1h6K3J1NXVWQWpsUUVkS1QvCnhTTUdCakJyajVKZTB2WjdjV3l3Qlc1RXFYNWczZnI4ZEptZi9LTHRVUjVCU3RraXY5K3dwcHlwSDlnRzdNY04KT3h3R1FmY3hlcHZnY0NQbjRDaDlBbTZhcHBoOUdYQVB2UHpCSGFlb095a3puUFRkeGF0akdDVUd3bHBUZXpidQpyc1RuZHNFSUgwczREUUtDQVFFQXhhSjIzM3A2Sml6ejFMQkk1NndBZE91Y3Z0UnZ6NVA1YUY3eE1YUldNeDg2CkVNVURqbXBWa0NqcEpoLzh6Mk12MHdQQStPUkJrTlBUaFB0WXpSOGtHeFE0MFJvYjEzSm53bmxva2ZHb2pkcUIKWmZOVnQvY1I5OVR3ZUNFcU42Y2M1ek5rZTVOVDRPRDhFVHF6S21zRE5VVGk3cGdiSmFxRWp5TjFXN1l6T3c2cgp0NDl2bHVLc0tIUk1Lait1RTNtVWxwM29GcjNHc0RHa0lCZFZRZUFETmtVcW9qRHZQY2VodVB0dThFZUNSREFNCnB2OUozaVgwQ3pHQ01RVGJNb0c5NUIvQzVHL2VScnRWVTRMOCs0YkljS2RKQys4bUR1OWQ5TFhRR2pSaDlMVGIKYXN1cnQxTFFBVUJuZnFVYitHdWtsbVlSd2crQmVvancvT2pVeVYrcUFRS0NBUUF0V1p4QSsweGlzc0RZc3BzdAo0czZ6TjBHV2FKVmlSMFlKNkNBeFJ6dEh1Nk1TTzB1aHBXTmtzTjh3WlExeUpMUy9PZnpTbHpsMHZwaXpTUEp5CjZsT0hSMkpkdUw0NXVwbzBUeDBnUjlXRUdoU081VlFFc1Y5K3MwYkhQQjJ1TXJnOTRzd2hPMmVwYlNPdEUrdVkKRWRSL0pSQVpLRy9xdW9Jem1RMFlOUjZkL0M3YWJTZnRadTQ1aXB2bFV2MGY4MVVUSk54aFdadVR0L2RvNE05awpBSzRuZmxSSzBUZ3pTNFA0YlNTK3dSaXg4d21FYTdkT3dBWkkxcmtLZmswbExhcG9zMG5rU1RGNWlIeEJOc21zClBCK05mY0Z0ZGZvY3NseWZMMXlYMzk1dkoxMFJDWC9XZzd4Rm8xWWI3bnBQZm9CUnFPSW5iR1IzYW50UTFNVk0KbDNrOUFvSUJBR2pBNlVNZzF2ZS9JZXFkR2JkNktxL09ac0diTmp5UFVVWXA5S3ZpM3dHdnpvWXU5dWlZb2d1TQpNN0FhaWxTZVhTMzZzbUQ2RTJxaGJGN3pIcWx5bFIrcFEwaEtEM0hOMlFOeWVLUEt0QzJrSUt3YUkxZ2tKQ2o1CmZCQWdmQkVOaWJ0ZU9TZHErcTJhY3VEcS9TWkJuR3l5dTVuOWszNE9lTDZwNjcyVndHZlFLZUpjcTZnTk0zVXAKMTJrWllibysyaXhQUEVJNWlzTy9QQ0FxWGUxUndFSVd2VGRFdXJwRFF3d2FjVDM0bVNwdFVYZCtudmVacEZYKwpndVJhajVpZ3ZqYlpRdUwwREp2dkZaWHpPd1pTOVpFSWlpWkNOeWo1WlJLYy85V3o2Q3ZkWk9PaFdyNExyZWJMCjdVOXFVbjRGQ0RNVG5Od0FmZitsOEI0Tmh5UEppZ0VDZ2dFQU43Tys5bWtzZDBENm1KM3JQMW5lVDFHMFVqZ1kKMlFKcFh4ejNRSWlQdVV6V2t1MENsZGVWR0JOa2NHTG9IOUpwZFNRcFJFTW1YUnVaazhOSzROdkJ0YnlUdklWZQp1ODA2clEybUEvMHkxSTBWNytyWDFBd3R1MkFRZEJ5aStLcDBPVkNuOHcrTWYzb051UzBwQ2hvMVZOUWlHYlh2CnkvNzBPQnFjVVA5QUpzTUtVeHVhL3Vma1Z4V0Q3a016SnB6VkRLdkxmMXVZY1FMbzYvZGRXajliSzVUTzRwa0cKbVlyK252M3I5L1dRRE9FRjdJMkl1dC9yWmJhQVczQ2ZKUFh1a1BHN1hja0UybXV2dEpUckhEVTBKUTI5UUZNWQpSN0xGbEg4VCtXUDBrQ2tkSXVuSmV3bnFWbFlXNk9zRWw2cytIUkFJaVlnS3pBOW5kK2RpZGFLRWRnPT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: http-server
  name: http-server
  namespace: demo
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/secure-backends: "true"
spec:
  tls:
    - hosts:
        - server.vvvincentli.com
      secretName: demo-tls  
  rules:
    - host: server.vvvincentli.com
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: http-server
                port:
                  number: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    keel.sh/pollSchedule: '@every 30m'
  labels:
    app: http-server
    keel.sh/approvals: "1"
    keel.sh/policy: patch
    keel.sh/trigger: poll
  name: http-server
  namespace: demo
spec:
  replicas: 3
  selector:
    matchLabels:
      app: http-server
  template:
    metadata:
      labels:
        app: http-server
    spec:
      containers:
        - image: vvvincentli/http-server:1.0.10
          imagePullPolicy: IfNotPresent
          name: http-server
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          env:
            - name: app-config
              value: /etc/http-server/appconfig.yaml
          ##资源限制
          ##QoS遵循如下规则：
          ##    BestEffort, 不申明limits和requests；
          ##    Burstable, 当申明limits和requests的cpu或内存时；
          ##    Guaranteed, 把limits和requests的cpu、内存设置成相同的值；
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 64m
              memory: 64Mi
          ##保护慢启动容器
          startupProbe:
            httpGet:
              path: /healthz
              port: 8080
              httpHeaders:
                - name: x-user
                  value: livenessProbe
            initialDelaySeconds: 3
            periodSeconds: 3
          ##就绪探测
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
              httpHeaders:
                - name: x-user
                  value: readinessProbe
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 2
            successThreshold: 1
          ##非集群内部的依赖组件，可用ReadinessGates配置额外的检查
          ##探活
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
              httpHeaders:
                - name: x-user
                  value: livenessProbe
            initialDelaySeconds: 3
            periodSeconds: 3
          ##优雅启动/终止
          lifecycle:
            ##启动
            postStart:
              httpGet:
                path: /healthz
                port: 8080
                scheme: HTTP
            ##终止
            preStop:
              exec:
                command:
                  - sh
                  - c
                  - echo "Stopping container now...">/proc/1/fd/1
          volumeMounts:
            - mountPath: /etc/http-server
              name: app-config
            #日志采集
            - mountPath: /etc/localtime
              name: host-time
      ##initContainers，检查中间件是否已启动
      initContainers:
        - command:
            - /bin/sh
            - -c
            - until nc -zv $MYSQL_HOST $MYSQL_PORT -w1; do echo 'waiting for mysql';
              sleep 1; done
          env:
            - name: MYSQL_HOST
              value: mariadb-0.mariadb.demo.svc.cluster.local
            - name: MYSQL_PORT
              value: "3306"
          image: busybox:latest
          name: wait-for-mariadb
      volumes:
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-time
        - configMap:
            defaultMode: 420
            name: http-server-config
          name: app-config


